#spring.datasource.jdbcUrl=jdbc:mariadb://mariadb-perf.casa.com.br:3306/springbatch?useUnicode=true&characterEncoding=UTF-8&autocommit=false
#spring.datasource.username=
#spring.datasource.password=
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#spring.batch.jdbc.initialize-schema=always
#
#app.datasource.jdbcUrl=jdbc:mariadb://mariadb-perf.casa.com.br:3306/app?useUnicode=true&characterEncoding=UTF-8&autocommit=false
#app.datasource.username=
#app.datasource.password=
#app.datasource.driver-class-name=org.mariadb.jdbc.Driver

####################################################################################
## Usei somente a prte de cima e copiei o arquivo para /etc/springbatch/primeira-etl
#####################################################################################

#spring.batch.job.names=truncaTabelaJob,processaArquivoLivrosJob,imprimeParImparJob
#spring.batch.job.enabled=false

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
#spring.datasource.jdbcUrl=jdbc:mariadb://mariadb-perf.casa.com.br:3306/springbatch?useUnicode=true&characterEncoding=UTF-8
#spring.datasource.username=springbatch
#spring.datasource.password=springbatch123456
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#
#spring.batch.jdbc.initialize-schema=always
#
#app.datasource.jdbcUrl=jdbc:mariadb://mariadb-perf.casa.com.br:3306/app
#app.datasource.username=app_user
#app.datasource.password=123456
#app.datasource.driverClassName=org.mariadb.jdbc.Driver
#
## Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle=true
#spring.datasource.validationQuery=SELECT 1
## ===============================
## = JPA / HIBERNATE
## ===============================
## Show or not log for each sql query
#spring.jpa.show-sql=true
## Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
## schema will be automatically created afresh for every start of application
#spring.jpa.hibernate.ddl-auto=update
## Naming strategy
##spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
##spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
## Allows Hibernate to generate SQL optimized for a particular DBMS
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect